library(imageRy) #beloved packages developed
library(terra)
library(viridis)
library(devtools)
library(ggplot2)
library(RStoolbox)

setwd("C:/Users/chiar/Desktop/UNIBO/Magistrale/Telerilevamento/Esame foto") 
#The images analyzed are six and show the landscape recovery following the eruption of Mount St. Helens in 1980; they are opened in R below.
#plotting all the satellite images under analysis
Helen84 = rast("Mt. St. Helen 84.jpg")
plot(Helen84)
Helen84=flip(Helen84)
plot(Helen84)

Helen91 = rast("Mt. St. Helen 91.jpg")
plot(Helen91)
Helen91=flip(Helen91)
plot(Helen91)

Helen00=rast("Mt. St. Helen 2000.jpg")
plot(Helen00)
Helen00=flip(Helen00)
plot(Helen00)

Helen07=rast("Mt. St. Helen 2007.jpg")
plot(Helen07)
Helen07=flip(Helen07)
plot(Helen07)

Helen16=rast("Mt. St. Helen 2016.jpg")
plot(Helen16)
Helen16=flip(Helen16)
plot(Helen16)

Helen20=rast("Mt. St. Helen 2020.jpg")
plot(Helen20)
Helen20=flip(Helen20)
plot(Helen20)

Helen25=rast("Mt. St. Helen 2025.jpg")
plot(Helen25)
Helen25=flip(Helen25)
plot(Helen25)
#In less than fifty years have occoured visible changes in teh surrounding vegetation 
im.multiframe(3,2)
im.plotRGB(Helen84, r=3, g=1, b=2)
im.plotRGB(Helen16, r=3, g=1, b=2)
im.plotRGB(Helen00, r=3, g=1, b=2)
im.plotRGB(Helen07, r=3, g=1, b=2)
im.plotRGB(Helen20, r=3, g=1, b=2)
im.plotRGB(Helen25, r=3, g=1, b=2)
dev.off()

 im.multiframe(3,2) 
#classe 1 vegetazion
#classe 2 soil(because of the disaster)
Helen84c =im.classify(Helen84, num_clusters=2)
Helen16c =im.classify(Helen16, num_clusters=2)
Helen00c =im.classify(Helen00, num_clusters=2)
Helen20c =im.classify(Helen20, num_clusters=2)
Helen07c =im.classify(Helen07, num_clusters=2)
Helen25c =im.classify(Helen25, num_clusters=2)

# it is essential to estabilish a correlation between the satellite image taken in 1980, and the current one from 2025.
im.multiframe(2,1)
plot(Helen84[[1]], col=inferno(100))
plot(Helen25[[1]], col=inferno(100))

ncell(Helen84) #total cell= 1384395
ncell(Helen84)*nlyr(Helen84) #total number of cell values in the raster stack = 4153185
plot(Helen84)

ncell(Helen25) #total cell = 1384395
ncell(Helen25)*nlyr(Helen25) #total number of cell values in the raster stack = 4153185
plot(Helen25)
#Plotting the image with band nir
Helen79 = rast("helennir79.jpg")
Helen84 = rast("helennir84.jpg")
Helen17 = rast("Helen17FC.jpg")
Helen25 = rast("Helen25FC.jpg")
#CALCULATION DVI (difference vegetation index)
im.multiframe(2,2)
dvi79=Helen79[[1]] - Helen79[[2]] #NIR-red
plot(dvi79, col=(inferno(100)), main = "DVI 1979")
dvi84=Helen84[[1]] - Helen84[[2]] #NIR-red
plot(dvi84, col=(inferno(100)), main = "DVI 1984")
dvi17=Helen17[[1]] - Helen17[[2]] #NIR-red
plot(dvi17, col=(inferno(100)), main = "DVI 2017")
dvi25=Helen25[[1]] - Helen25[[2]] #NIR-red
plot(dvi25, col=(inferno(100)), main = "DVI 2025")

#CALCULATION NDVI,Normalized Difference Vegetation Index, is a valuable tool for assessing the health and vitality of vegetation
ndvi79 = (Helen79[[1]] - Helen79[[2]]) / (Helen79[[1]] + Helen79[[2]])
ndvi79 = clamp(ndvi79)
ndvi84 = (Helen84[[2]] - Helen84[[1]]) / (Helen84[[1]] + Helen84[[2]])
ndvi84 = clamp(ndvi84)
ndvi00 = (Helen00[[2]] - Helen00[[1]]) / (Helen00[[1]] + Helen00[[2]])
ndvi00 = clamp(ndvi00)
ndvi16 = (Helen16[[2]] - Helen16[[1]]) / (Helen16[[1]] + Helen16[[2]])
ndvi16 = clamp(ndvi16)

 im.multiframe(2,2) 
plot(ndvi79, col = (inferno(100)), main = "NDVI 1979", type = "continuous")
plot(ndvi84, col = (inferno(100)), main = "NDVI 1984", type = "continuous")
plot(ndvi00, col = (inferno(100)), main = "NDVI 2000", type = "continuous")
plot(ndvi16, col = (inferno(100)), main = "NDVI 2016", type = "continuous")



#differeces between the DVI values of the 1984 and 2025 images
dvidif = dvi25 - dvi84
plot(dvidif, col = inferno (100))

im.ridgeline(dvidif, scale=5, palette="magma")


#calculation of the frequencies,  la frequenza ovvero number of times we have the same value

Helen79c =im.classify(Helen79, num_clusters=2)
fHelen79 = freq(Helen79c)
totHelen79 = ncell(Helen79c)
propHelen79 = fHelen79 / totHelen79
percHelen79 = propHelen79 * 100
#1 = forest 86 %
#2 = disastro 14 %

fHelen84 = freq(Helen84c)
totHelen84 = ncell(Helen84c)
propHelen84 = fHelen84 / totHelen84
percHelen84 = propHelen84 * 100
#1 = forest 69 %
#2 = disastro 31 %

fHelen25 = freq(Helen25c) # Pixel frequency per class 
totHelen25 = ncell(Helen25c) # pixel's total number
propHelen25 = fHelen25 / totHelen25 #proportion (relative frequence)
percHelen25 = propHelen25 * 100 #percentage per class
#1 = forest 84 %
#2 = disastro 16 %

Helen16 (17% e 82%)

#creation of a data.frame (table)
#defining columns
class = c("forest", "human")  #using c because are twe elements of the same vector 
y79 = c(86, 14)
y84 = c(69, 31) #y means year
y25 = c(84, 16) 
tabout = data.frame(class,y79 y84, y25)
d1 = ggplot(tabout, aes(x=class, y = y84, color=class)) + geom_bar(stat="identity", fill="white") + ylim(c(0,100)) #ensuring we have the same axis
d2 = ggplot(tabout, aes(x=class, y = y25, color=class)) + geom_bar(stat="identity", fill="white") + ylim(c(0,100))
d3 = ggplot(tabout, aes(x=class, y = y79, color=class)) + geom_bar(stat="identity", fill="white") + ylim(c(0,100))
d=im.ggplot(Helen79)
d0=im.ggplot(Helen84)
d00=im.ggplot(Helen25)

im.multiframe(2,2)
plot(Helen79a)
plot(Helen25a)
dvi79=Helen79a[[1]] - Helen79a[[2]] #NIR-red
plot(dvi79, col=inferno(100))
dvi25=Helen25[[1]] - Helen25[[2]] #NIR-red
plot(dvi25, col=inferno(100))






